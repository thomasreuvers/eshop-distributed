@page "/Products"
@using Catalog.Domain
@using Microsoft.AspNetCore.OutputCaching
@using WebApp.ApiClients
@inject CatalogApiClient CatalogApiClient
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

<PageTitle>Products</PageTitle>

<h3>Products</h3>

<p>Here are some of our amazing outdoor products that you can purchase.</p>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else if (products.Count == 0)
{
    <p><em>There is a problem loading our products. Please try again later.</em></p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Image</th>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td><img height="80" width="80" src="https://raw.githubusercontent.com/Microsoft"/></td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C2")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        products = await CatalogApiClient.GetProductsAsync();
    }
}